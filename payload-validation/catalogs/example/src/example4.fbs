///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) typedef int GmbH and contributors.
//  All rights reserved. Licensed under the MIT open-source license.
//
///////////////////////////////////////////////////////////////////////////////

include "wamp.fbs";

namespace trading;


table ClockTickSimple
{
    counter: uint32;
    clock_ts: uint64 (timestamp);
}

enum PeriodDuration: uint8
{
    NONE = 0,
    MS_100 = 3,
    SECONDS_5 = 7,
    MINUTES_15 = 12
}

table Period
{
    period_dur: PeriodDuration;
    start_ts: uint64 (timestamp);
    limit: uint32 (kwarg);
}

table Candle
{
    period_dur: PeriodDuration;
    start_ts: uint64 (timestamp);
    market_oid: [uint8] (uuid);
    modified: uint64 (timestamp);
    quantity: double;
    volume: double;
    price_open: double;
    price_close: double;
    price_min: double;
    price_max: double;
    price_avg: double;
    price_var: double;
    price_avg_volw: double;
    price_var_volw: double;
}

table CandleResult
{
    /// args[0] (1st positional call result) has type Candle
    value: Candle;
}

rpc_service ILimitOrderBookReplica (
    type: "interface",
    uuid: "6563cfac-498c-47cd-9ff1-24cbd0bdc6e5",
    wampuri: "eth.pydefi.replica.<uuid:replica>"
) {
    get_candle_history (Period): CandleResult (
        type: "procedure",
        wampuri: "book.<uuid:book>.get_candle_history"
    );

    on_clock_tick (ClockTickSimple): Void (
        type: "topic",
        wampuri: "clock.<uuid:clock>.on_clock_tick"
    );
}
